#@TYPE: Machine
#@NAME: sl8581e machine
#@DESCRIPTION: UNISOC sl8581e-nand-marlin3e-mifi machine

require conf/machine/include/sl8581e.inc
#require conf/machine/include/wayland.inc
# use rogue-um instead of mesa for EGL & GLES libraries
PREFERRED_PROVIDER_virtual/egl = "rogue-um"
PREFERRED_PROVIDER_virtual/libgl = "rogue-um"
PREFERRED_PROVIDER_virtual/libgles1 = "rogue-um"
PREFERRED_PROVIDER_virtual/libgles2 = "rogue-um"
PREFERRED_PROVIDER_virtual/libgbm = "rogue-um"
PREFERRED_PROVIDER_virtual/mesa = "rogue-um"

MACHINE_FEATURES = " modem radio engpc charge usbcontrol thermald watchdog upower wpa-supplicant wcnini-marlin3e connman pppd fsckmsdos terminal rfkill alsa "
MACHINE_FEATURES += " powersave tinyalsa-phoenix production userdata-resize2fs localtime autoreboot"

MACHINE_FEATURES += "${@bb.utils.contains('USERDEBUG','userdebug','networkutils','',d)}"

MACHINE_FEATURES += " trusty storage "
MACHINE_FEATURES += " hello-sagereal "

# For board plugins support
BOARD_PLUGINS_SUPPORT = "test common wcn-recovery"

MACHINE_ADD_DISTRO_FEATURES = "pulseaudio bluetooth"

CONSOLE_LINUX = "ttyS1"
CONSOLE ?= "${CONSOLE_LINUX}"
SERIAL_CONSOLES = "115200;ttyS1"
D_NUM = "1"
DAEMON_INITTAB = "k1:5:respawn:/usr/sbin/ofonod -nd -p rildev,ril,rilmodem,connman,bluez5,hfp_ag_bluez5+ \
"

MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS +=""

SUPPORT_SSHD = "ssh-server-openssh"

CMDLINE ?= ""

#PREFERRED_PROVIDER_virtual/bootloader = "u-boot15"
#PREFERRED_VERSION_linux-unisoc-4.14 = "1.1%"
#PREFERRED_VERSION_u-boot15 = "1.1%"

KERNEL_DEVICETREE = "sprd/sl8581e-nand-marlin3e-mifi.dtb"
KERNEL_DEVICETREE_OVERLAY = "sprd/sl8581e-nand-marlin3e-mifi-overlay.dtbo"
KERNEL_DEFCONFIG = "sprd_sl8581e_defconfig"
KCONFIG_MODE="--alldefconfig"

KERNEL_PATCH_FILEPATH = "${THISDIR}/linux-unisoc-4.14/sl8581e"
KERNEL_MACHINE_PATCH = "file://sl8581e-nand-marlin3e-mifi.cfg \
			"
KERNEL_COMPRESS_TYPE = "gzip"

CHIPRAM_MACHINE = "sl8581e_nand_marlin3e_mifi_config"

UBOOT_MACHINE = "sl8581e_nand_marlin3e_mifi_defconfig"
UBOOT_TARGET_DTB ="sl8581e_nand_marlin3e_mifi"

# For Recovery
KERNEL_RECOVERY_DEVICETREE = "sprd/recovery-sl8581e-nand-marlin3e-mifi.dtb"
#KERNEL_RECOVERY_DEFCONFIG = "recovery_sprd_sharkl3_defconfig"
UNISOC_KERNEL = "linux-unisoc-4.14"
KERNEL_PATCH_FOR_RECOVERY = " \
            "

# support ubifs
IMAGE_FSTYPES_append = " ubifs"
MKUBIFS_ARGS = "-F -m 2048 -e 126976 -c 2000"
UBINIZE_ARGS = "-m 2048 -p 128KiB -s 2048 -O 2048"
IMAGE_ROOTFS_ALIGNMENT = "2048"
EXTRA_IMAGE_FEATURES += " read-only-rootfs "

PRODNV_MKUBIFS_ARGS = ""
IMAGE_ROOTFS_EXTRA_SPACE = "0"
IMAGE_ROOTFS_SIZE = "0"
IMAGE_OVERHEAD_FACTOR = "1.1"

USERDATA_PARTITION = " /dev/ubi0_userdata /mnt/userdata ubifs "
PRODNV_PARTITION = " /dev/ubi0_prodnv /etc/productinfo ubifs "
SDCARD_PARTITION = " /dev/mmcblk0p1 /mnt/media auto "
HOME_DIR = " /mnt/userdata/home /home none "
VAR_DIR = "${@bb.utils.contains('IMAGE_FEATURES', 'read-only-rootfs',' /mnt/userdata/var /var none ', '',d)}"
DATA_DIR = " /mnt/userdata/data /mnt/data none "
EXTRA_PARTITIONS = "${USERDATA_PARTITION}""${PRODNV_PARTITION}""${DATA_DIR}""${HOME_DIR}""${VAR_DIR}"

USERDATA_MKUBIFS_ARGS = "-F -m 2048 -e 126976 -c 2000 -R 512KiB"
USERDATA_FSTYPES = "ubifs"
USERDATA_SIZE = "81920"

PRODNV_MKUBIFS_ARGS = "-F -m 2048 -e 126976 -c 42"
PRODNV_FSTYPES = "ubifs"
PRODNV_SIZE = "2980"

INHERIT += "extrausers"
EXTRA_USERS_PARAMS = "\
    groupadd -g 1000 user; \
    useradd -p '' -u 1000 -g 1000 user; \
"
EXTRA_USERS_PARAMS_append = " \
    ${@bb.utils.contains('USERDEBUG','userdebug','usermod -p \'\' root;','usermod -p \'abu2Y6QjfZKeU\' root;',d)}\
"

UBOOT_MERGE_KERNEL_CMDLINE_TO_BOOTARGS = "y"
BOARD_SECBOOT_CONFIG = "${@bb.utils.contains('SECBOOT_ENABLE','sec','true','false',d)}"
UNISOC_SIGN_ENABLE = "yes"
UNISOC_SIGN_PSS = "pkcs15"
PROJECT_FLAG = "OTHER"

### START secboot and vbootv2 configs for uboot
UBOOT_SECSET = "${@bb.utils.contains('SECBOOT_ENABLE','sec','-DCONFIG_SECBOOT -DCONFIG_SPRD_SECBOOT','',d)}"
### END secboot and vbootv2 configs for uboot

### START secboot and vbootv2 configs for chipram
CHIPRAM_SECSET = "${@bb.utils.contains('SECBOOT_ENABLE','sec','-DCONFIG_SECBOOT -DCONFIG_SPRD_SECBOOT','',d)}"
### END secboot and vbootv2 configs for chipram

### START secboot and vbootv2 configs for modem_ctrl
MODEM_SECSET = "${@bb.utils.contains('SECBOOT_ENABLE','sec','-DCONFIG_SECBOOT -DCONFIG_SPRD_SECBOOT','',d)}"
MODEM_LDKERNELBOOTCP = "${@bb.utils.contains('SECBOOT_ENABLE','sec','-lkernelbootcp','',d)}"
### END secboot and vbootv2 configs for modem_ctrl
### END BOARD_SECBOOT_CONFIG

EXTRA_IMAGE_FEATURES += " read-only-rootfs "

XML_FILE = "${TOPDIR}/../prebuilts/pac-binary/sl8581e/sl8581e-nand-marlin3e-mifi.xml"

USERDATA_PARTITION = " /dev/ubi0_userdata /mnt/userdata ubifs "
PRODNV_PARTITION = " /dev/ubi0_prodnv /etc/productinfo ubifs "
SDCARD_PARTITION = " /dev/mmcblk0p1 /mnt/media auto "
HOME_DIR = " /mnt/userdata/home /home none "
VAR_DIR = "${@bb.utils.contains('IMAGE_FEATURES', 'read-only-rootfs',' /mnt/userdata/var /var none ', '',d)}"
DATA_DIR = " /mnt/userdata/data /mnt/data none "
EXTRA_PARTITIONS = "${USERDATA_PARTITION}""${PRODNV_PARTITION}""${DATA_DIR}""${HOME_DIR}""${VAR_DIR}"

STORAGE_TYPE = "nand"

###for video###
JPG_PLATFORM := "r8p0"
VSP_PLATFORM = "iwhale2"
VPP_PLATFORM = "sharkl3"
BOARD_PLATFORM = "sp9863a"
BIA_SUPPORT = "true"
AFBC = "false"
RGB_ENC_SUPPORT = "true"

# video omx avc
ADD_OMX_AVC_DEC_HW = "libomxavcdechwsprd"
ADD_OMX_AVC_DEC_SW = "libomxavcdecswsprd"
ADD_OMX_AVC_ENC_HW = "libomxavcenchwsprd"
ADD_UTEST_AVC_DEC = "utestvspavch264dec"
ADD_UTEST_AVC_ENC = "utestvspavch264enc"
ADD_STGFRT_AVC_DEC = "libstagefrightsprdh264dec"
ADD_STGFRT_AVC_ENC = "libstagefrightsprdh264enc"
# video omx m4v h263
ADD_OMX_M4V_H263_DEC_HW = "libomxm4vh263dechwsprd"
ADD_OMX_M4V_H263_DEC_SW = "libomxm4vh263decswsprd"
ADD_OMX_M4V_H263_ENC_SW = "libomxm4vh263encswsprd"
ADD_UTEST_M4V_H263_DEC = "utestvspm4vh263dec"
ADD_UTEST_M4V_H263_ENC = "utestvspm4vh263enc"
ADD_STGFRT_M4V_H263_DEC = "libstagefrightsprdmpeg4dec"
ADD_STGFRT_M4V_H263_ENC = "libstagefrightsprdmpeg4enc"
# video omx hevc
ADD_OMX_HEVC_DEC_HW = "libomxhevcdechwsprd"
ADD_OMX_HEVC_ENC_HW = "libomxhevcenchwsprd"
ADD_UTEST_HEVC_DEC = "utestvsphevch265dec"
ADD_UTEST_HEVC_ENC = "utestvsphevch265enc"
ADD_STGFRT_HEVC_DEC = "libstagefrightsprdh265dec"
ADD_STGFRT_HEVC_ENC = "libstagefrightsprdh265enc"
# video omx vpx
ADD_OMX_VP8_DEC_HW = "libomxvpxdechwsprd"
ADD_UTEST_VP8_DEC = "utestvspvpxdec"
ADD_STGFRT_VP8_DEC = "libstagefrightsprdvpxdec"
# video omx vp9
ADD_OMX_VP9_DEC_HW = "libomxvp9dechwsprd"
ADD_UTEST_VP9_DEC = "utestvspvp9dec"
ADD_STGFRT_VP9_DEC = "libstagefrightsprdvp9dec"
###end video###

###for camera###
CAMERA_BOARD="sl8581e-nand-marlin3e-mifi"
CAMERA_ISP_DIR="isp2.6"
CAMERA_DRIVER_DIR="k4.14_sprdroidq"
CAMERA_BSP_BOARD_CAMERA_MODULE_ISP_VERSION="isp2.6"
CAMERA_BSP_BOARD_CAMERA_MODULE_CPP_VERSION="lite_r4p0"
CAMERA_BSP_BOARD_CAMERA_MODULE_CSI_VERSION="receiver_r2p0"
CAMERA_BSP_BOARD_CAMERA_MODULE_ISP_ADAPT_VERSION="sharkl3"
CAMERA_FLASH_IC_VERSION="ocp8137"
###end camera###
#support dual card
CONNMAN_SUPPORT_DUAL_SIMCARD = "true"

### START SML and TOS configs ###
SML_CONFIG = "sharkl3@sharkl3"
TEE_CONFIG = "trusty"
TRUSTY_DEFAULT_PROJECT = "sharkl3"
TRUSTY_MACHINE = "sl8581e"

SML_MEM_SIZE = "0x00020000"
SML_MEM_ADDR = "0x94000000"

TOS_MEM_SIZE = "0x01fe0000"
TOS_MEM_ADDR = "0x94020000"

EXTRA_IMAGEDEPENDS += "sml"
EXTRA_IMAGEDEPENDS += "trusty"
### END SML and TOS configs ###

### For GPU ###
GPU_PLATFORM = "sharkl3"
GPU_RGX_BVNC = "22.86.104.218"
### End GPU ###

#for iperf
IPERF_VERSION = "iperf2"

MULTI_SIM_SET = "-DMULTI_SIM_SUPPORT"

# dualsim flag
DUALSIM_FLAG = "true"

SUPPORT_VOICECALL = "true"

HALO_SUPPORT_SET = "${@bb.utils.contains('SECBOOT_ENABLE','sec','-DHALO_SUPPORT','',d)}"
HALO_TYPE_SET = "${@bb.utils.contains('SECBOOT_ENABLE','sec','-HALO_TYPE_SET','',d)}"

# for symbolic link
UNISOC_SYMLINK_ENABLE = "yes"
SYMLINK_SOURCE = "localtime"

# if system have symbolic link localtime, enable tele sync time with nitz
TELE_CFLAGS += "${@bb.utils.contains('SYMLINK_SOURCE','localtime','-DNITZ_SYNC_TINE_SUPPORT','',d)}"
